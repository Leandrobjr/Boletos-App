const { ethers } = require("hardhat");

async function main() {
  console.log("üöÄ Implantando P2PEscrow com MockUSDT correto...");
  
  const MOCK_USDT_CORRETO = '0x213Ae2631a5646A2228648aFa790Bc93f3f0218B';
  
  // Deploy do P2PEscrowV2 com endere√ßo correto
  const P2PEscrowV2 = await ethers.getContractFactory("P2PEscrowV2");
  console.log("üìù Implantando P2PEscrowV2...");
  
  const p2pEscrow = await P2PEscrowV2.deploy(MOCK_USDT_CORRETO);
  await p2pEscrow.waitForDeployment();
  
  const escrowAddress = await p2pEscrow.getAddress();
  console.log(`‚úÖ P2PEscrowV2 implantado em: ${escrowAddress}`);
  
  // Verificar se est√° correto
  const usdtConfigured = await p2pEscrow.usdt();
  console.log(`üè¶ USDT configurado: ${usdtConfigured}`);
  console.log(`‚úÖ Endere√ßo correto: ${usdtConfigured === MOCK_USDT_CORRETO}`);
  
  // Verificar owner
  const owner = await p2pEscrow.owner();
  console.log(`üë§ Owner: ${owner}`);
  
  console.log("\nüîß ATUALIZE O CONFIG.JS COM:");
  console.log(`P2P_ESCROW: '${escrowAddress}'`);
  
  return {
    escrowAddress,
    mockUSDT: MOCK_USDT_CORRETO
  };
}

main()
  .then((result) => {
    console.log("\n‚úÖ Implanta√ß√£o conclu√≠da com sucesso!");
    console.log("üìù Resultado:", result);
    process.exit(0);
  })
  .catch((error) => {
    console.error("‚ùå Erro na implanta√ß√£o:", error);
    process.exit(1);
  });







