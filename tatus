[33mcommit b42f15df62417c48f79dd2ede2b956c5193329d7[m
Author: BoletoXCrypto <dev@boletoxcrypto.com>
Date:   Mon Aug 4 13:48:09 2025 -0300

    feat: criar rotas /api/boletos e /api/boletos/usuario/[uid] com CORS

[1mdiff --git a/backend-bxc/api/boletos.js b/backend-bxc/api/boletos.js[m
[1mnew file mode 100644[m
[1mindex 00000000..14c71da9[m
[1m--- /dev/null[m
[1m+++ b/backend-bxc/api/boletos.js[m
[36m@@ -0,0 +1,73 @@[m
[32m+[m[32mconst { Pool } = require('pg');[m
[32m+[m
[32m+[m[32m// Configura√ß√£o do banco[m
[32m+[m[32mconst pool = new Pool({[m
[32m+[m[32m  connectionString: process.env.DATABASE_URL,[m
[32m+[m[32m  ssl: {[m
[32m+[m[32m    rejectUnauthorized: false[m
[32m+[m[32m  }[m
[32m+[m[32m});[m
[32m+[m
[32m+[m[32mmodule.exports = async (req, res) => {[m
[32m+[m[32m  // 1. CORS Headers (OBRIGAT√ìRIO)[m
[32m+[m[32m  res.setHeader('Access-Control-Allow-Origin', '*');[m
[32m+[m[32m  res.setHeader('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE, OPTIONS');[m
[32m+[m[32m  res.setHeader('Access-Control-Allow-Headers', 'Content-Type, Authorization, X-Requested-With');[m
[32m+[m[32m  res.setHeader('Access-Control-Max-Age', '86400');[m
[32m+[m
[32m+[m[32m  // 2. Preflight CORS[m
[32m+[m[32m  if (req.method === 'OPTIONS') {[m
[32m+[m[32m    return res.status(200).end();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  try {[m
[32m+[m[32m    console.log(`üöÄ API Boletos Request: ${req.method} ${req.url}`);[m
[32m+[m
[32m+[m[32m    if (req.method === 'GET') {[m
[32m+[m[32m      // Buscar todos os boletos[m
[32m+[m[32m      const result = await pool.query('SELECT * FROM boletos ORDER BY created_at DESC');[m
[32m+[m[41m      [m
[32m+[m[32m      res.status(200).json({[m
[32m+[m[32m        success: true,[m
[32m+[m[32m        data: result.rows,[m
[32m+[m[32m        count: result.rowCount[m
[32m+[m[32m      });[m
[32m+[m
[32m+[m[32m    } else if (req.method === 'POST') {[m
[32m+[m[32m      // Criar novo boleto[m
[32m+[m[32m      const { numero_controle, valor, vencimento, usuario_id, descricao } = req.body;[m
[32m+[m
[32m+[m[32m      if (!numero_controle || !valor || !usuario_id) {[m
[32m+[m[32m        return res.status(400).json({[m
[32m+[m[32m          error: 'Dados obrigat√≥rios faltando',[m
[32m+[m[32m          required: ['numero_controle', 'valor', 'usuario_id'][m
[32m+[m[32m        });[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      const result = await pool.query([m
[32m+[m[32m        'INSERT INTO boletos (numero_controle, valor, vencimento, usuario_id, descricao, status) VALUES ($1, $2, $3, $4, $5, $6) RETURNING *',[m
[32m+[m[32m        [numero_controle, valor, vencimento, usuario_id, descricao, 'disponivel'][m
[32m+[m[32m      );[m
[32m+[m
[32m+[m[32m      res.status(201).json({[m
[32m+[m[32m        success: true,[m
[32m+[m[32m        data: result.rows[0],[m
[32m+[m[32m        message: 'Boleto criado com sucesso'[m
[32m+[m[32m      });[m
[32m+[m
[32m+[m[32m    } else {[m
[32m+[m[32m      res.status(405).json({[m
[32m+[m[32m        error: 'M√©todo n√£o permitido',[m
[32m+[m[32m        method: req.method,[m
[32m+[m[32m        allowed: ['GET', 'POST', 'OPTIONS'][m
[32m+[m[32m      });[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m  } catch (error) {[m
[32m+[m[32m    console.error('‚ùå Erro na API Boletos:', error);[m
[32m+[m[32m    res.status(500).json({[m
[32m+[m[32m      error: 'Erro interno do servidor',[m
[32m+[m[32m      details: error.message[m
[32m+[m[32m    });[m
[32m+[m[32m  }[m
[32m+[m[32m};[m[41m [m
\ No newline at end of file[m
[1mdiff --git a/backend-bxc/api/boletos/usuario/[uid].js b/backend-bxc/api/boletos/usuario/[uid].js[m
[1mnew file mode 100644[m
[1mindex 00000000..23aab651[m
[1m--- /dev/null[m
[1m+++ b/backend-bxc/api/boletos/usuario/[uid].js[m
[36m@@ -0,0 +1,93 @@[m
[32m+[m[32mconst { Pool } = require('pg');[m
[32m+[m
[32m+[m[32m// Configura√ß√£o do banco[m
[32m+[m[32mconst pool = new Pool({[m
[32m+[m[32m  connectionString: process.env.DATABASE_URL,[m
[32m+[m[32m  ssl: {[m
[32m+[m[32m    rejectUnauthorized: false[m
[32m+[m[32m  }[m
[32m+[m[32m});[m
[32m+[m
[32m+[m[32mmodule.exports = async (req, res) => {[m
[32m+[m[32m  // 1. CORS Headers (OBRIGAT√ìRIO)[m
[32m+[m[32m  res.setHeader('Access-Control-Allow-Origin', '*');[m
[32m+[m[32m  res.setHeader('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE, OPTIONS');[m
[32m+[m[32m  res.setHeader('Access-Control-Allow-Headers', 'Content-Type, Authorization, X-Requested-With');[m
[32m+[m[32m  res.setHeader('Access-Control-Max-Age', '86400');[m
[32m+[m
[32m+[m[32m  // 2. Preflight CORS[m
[32m+[m[32m  if (req.method === 'OPTIONS') {[m
[32m+[m[32m    return res.status(200).end();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  try {[m
[32m+[m[32m    // Extrair UID da query string ou URL[m
[32m+[m[32m    const url = new URL(req.url, `http://${req.headers.host}`);[m
[32m+[m[32m    const uid = url.searchParams.get('uid') || url.pathname.split('/').pop();[m
[32m+[m
[32m+[m[32m    console.log(`üöÄ API Boletos Usuario [UID] Request: ${req.method} ${req.url}, UID: ${uid}`);[m
[32m+[m
[32m+[m[32m    if (!uid || uid === 'usuario') {[m
[32m+[m[32m      res.status(400).json({[m
[32m+[m[32m        error: 'UID √© obrigat√≥rio',[m
[32m+[m[32m        message: 'Par√¢metro uid n√£o fornecido na URL'[m
[32m+[m[32m      });[m
[32m+[m[32m      return;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if (req.method === 'GET') {[m
[32m+[m[32m      // Buscar boletos do usu√°rio[m
[32m+[m[32m      const result = await pool.query([m
[32m+[m[32m        'SELECT * FROM boletos WHERE usuario_id = $1 ORDER BY created_at DESC',[m
[32m+[m[32m        [uid][m
[32m+[m[32m      );[m
[32m+[m
[32m+[m[32m      res.status(200).json({[m
[32m+[m[32m        success: true,[m
[32m+[m[32m        data: result.rows,[m
[32m+[m[32m        count: result.rowCount,[m
[32m+[m[32m        usuario_id: uid[m
[32m+[m[32m      });[m
[32m+[m
[32m+[m[32m    } else if (req.method === 'POST') {[m
[32m+[m[32m      // Criar boleto para o usu√°rio[m
[32m+[m[32m      const { numero_controle, valor, vencimento, descricao } = req.body;[m
[32m+[m
[32m+[m[32m      if (!numero_controle || !valor) {[m
[32m+[m[32m        return res.status(400).json({[m
[32m+[m[32m          error: 'Dados obrigat√≥rios faltando',[m
[32m+[m[32m          required: ['numero_controle', 'valor'][m
[32m+[m[32m        });[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      const result = await pool.query([m
[32m+[m[32m        'INSERT INTO boletos (numero_controle, valor, vencimento, usuario_id, descricao, status) VALUES ($1, $2, $3, $4, $5, $6) RETURNING *',[m
[32m+[m[32m        [numero_controle, valor, vencimento, uid, descricao, 'disponivel'][m
[32m+[m[32m      );[m
[32m+[m
[32m+[m[32m      res.status(201).json({[m
[32m+[m[32m        success: true,[m
[32m+[m[32m        data: result.rows[0],[m
[32m+[m[32m        message: 'Boleto criado com sucesso'[m
[32m+[m[32m      });[m
[32m+[m
[32m+[m[32m    } else {[m
[32m+[m[32m      res.status(405).json({[m
[32m+[m[32m        error: 'M√©todo n√£o permitido',[m
[32m+[m[32m        method: req.method,[m
[32m+[m[32m        allowed: ['GET', 'POST', 'OPTIONS'][m
[32m+[m[32m      });[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m  } catch (error) {[m
[32m+[m[32m    console.error('‚ùå Erro na API Boletos Usuario [UID]:', error);[m
[32m+[m[32m    // Garantir headers CORS mesmo em erro[m
[32m+[m[32m    res.setHeader('Access-Control-Allow-Origin', '*');[m
[32m+[m[32m    res.setHeader('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE, OPTIONS');[m
[32m+[m[32m    res.setHeader('Access-Control-Allow-Headers', 'Content-Type, Authorization, X-Requested-With');[m
[32m+[m[32m    res.status(500).json({[m
[32m+[m[32m      error: 'Erro interno do servidor',[m
[32m+[m[32m      details: error.message[m
[32m+[m[32m    });[m
[32m+[m[32m  }[m
[32m+[m[32m};[m[41m [m
\ No newline at end of file[m
[33ma0ff7ab6[m[33m ([m[1;36mHEAD[m[33m -> [m[1;32mdevelop[m[33m, [m[1;31morigin/develop[m[33m)[m SOLU√á√ÉO DEFINITIVA: Corrigido package.json da raiz e configura√ß√£o Vercel
[33m39fb2699[m Corre√ß√£o banco - Aplicada solu√ß√£o com vari√°veis separadas (DB_HOST, DB_USER, DB_PASS, DB_NAME)
[33mc4cc06e0[m Trigger deploy para aplicar DATABASE_URL
[33m15963ec3[m Corre√ß√£o Vercel - Ajustado vercel.json para pasta api na raiz
[33m3c265473[m Corre√ß√£o Vercel - Movido fun√ß√µes para pasta api na raiz
